//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;
using System.Data.Objects.DataClasses;


namespace AppGest.Datos.Persistencia
{
    
    public partial class Reg_encab : EntityObject
    {
    
        #region Composiciones
    

        #endregion
    
        #region Agregaciones
    
        /// <summary>
        /// Establece el objeto asociado a la propiedad 'Usuario' de esta instancia, teniendo en cuena
        /// si se se debe hacer por instancia (propiedad 'Usuario') o por referencia (propiedad 'UsuarioReference').
        /// </summary>
        /// <param name="nuevo">Entidad a asociar</param>
        /// <param name="forzarPorInstancia">(Opcional) Fuerza el seteo por referencia.</param>
        public virtual void SetUsuario(Usuario nuevo, bool forzarPorInstancia = false)
        {
            this.SetRelacion("Usuario", "UsuarioReference", nuevo, forzarPorInstancia);
        }
    
        /// <summary>
        /// Establece el objeto asociado a la propiedad 'Concepto' de esta instancia, teniendo en cuena
        /// si se se debe hacer por instancia (propiedad 'Concepto') o por referencia (propiedad 'ConceptoReference').
        /// </summary>
        /// <param name="nuevo">Entidad a asociar</param>
        /// <param name="forzarPorInstancia">(Opcional) Fuerza el seteo por referencia.</param>
        public virtual void SetConcepto(Concepto nuevo, bool forzarPorInstancia = false)
        {
            this.SetRelacion("Concepto", "ConceptoReference", nuevo, forzarPorInstancia);
        }
    
        /// <summary>
        /// Establece el objeto asociado a la propiedad 'EntidadRegistro' de esta instancia, teniendo en cuena
        /// si se se debe hacer por instancia (propiedad 'EntidadRegistro') o por referencia (propiedad 'EntidadRegistroReference').
        /// </summary>
        /// <param name="nuevo">Entidad a asociar</param>
        /// <param name="forzarPorInstancia">(Opcional) Fuerza el seteo por referencia.</param>
        public virtual void SetEntidadRegistro(Persona nuevo, bool forzarPorInstancia = false)
        {
            this.SetRelacion("EntidadRegistro", "EntidadRegistroReference", nuevo, forzarPorInstancia);
        }
    
        /// <summary>
        /// Establece el objeto asociado a la propiedad 'EntidadEmpresa' de esta instancia, teniendo en cuena
        /// si se se debe hacer por instancia (propiedad 'EntidadEmpresa') o por referencia (propiedad 'EntidadEmpresaReference').
        /// </summary>
        /// <param name="nuevo">Entidad a asociar</param>
        /// <param name="forzarPorInstancia">(Opcional) Fuerza el seteo por referencia.</param>
        public virtual void SetEntidadEmpresa(Persona nuevo, bool forzarPorInstancia = false)
        {
            this.SetRelacion("EntidadEmpresa", "EntidadEmpresaReference", nuevo, forzarPorInstancia);
        }
    
        /// <summary>
        /// Establece el objeto asociado a la propiedad 'EntidadResp' de esta instancia, teniendo en cuena
        /// si se se debe hacer por instancia (propiedad 'EntidadResp') o por referencia (propiedad 'EntidadRespReference').
        /// </summary>
        /// <param name="nuevo">Entidad a asociar</param>
        /// <param name="forzarPorInstancia">(Opcional) Fuerza el seteo por referencia.</param>
        public virtual void SetEntidadResp(Persona nuevo, bool forzarPorInstancia = false)
        {
            this.SetRelacion("EntidadResp", "EntidadRespReference", nuevo, forzarPorInstancia);
        }
    
        /// <summary>
        /// Establece el objeto asociado a la propiedad 'EntidadAfectada' de esta instancia, teniendo en cuena
        /// si se se debe hacer por instancia (propiedad 'EntidadAfectada') o por referencia (propiedad 'EntidadAfectadaReference').
        /// </summary>
        /// <param name="nuevo">Entidad a asociar</param>
        /// <param name="forzarPorInstancia">(Opcional) Fuerza el seteo por referencia.</param>
        public virtual void SetEntidadAfectada(Persona nuevo, bool forzarPorInstancia = false)
        {
            this.SetRelacion("EntidadAfectada", "EntidadAfectadaReference", nuevo, forzarPorInstancia);
        }
    

        #endregion
    
    }
}
